# spring-boot-docker/docker-compose.yml
version: "3.7"
services:
  JP_java:
    container_name: JP_java
    image: openjdk
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - spring-boot-mysql-network
  JP_mysql:
    container_name: JP_mysql
    image: mysql
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command:
      --default-authentication-plugin=mysql_native_password
      #--init-file /docker-entrypoint-initdb.d/1-init.sql
    restart: always
    environment:
      DATABASE_HOST: JP_mysql
      MYSQL_ROOT_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}
      #MYSQL_DATABASE: ${MYSQLDB_ROOT_DATABASE}
    env_file:
      - .env
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - spring-boot-mysql-network
    expose:
      - "3306"
  adminer:
    image: adminer
    networks:
      - spring-boot-mysql-network
    restart: always
    ports:
      - "9000:8080"
networks:
  database:
    external: true
  spring-boot-mysql-network:
    name: mars
    driver: bridge
    ipam:
     config:
       - subnet: 192.168.100.0/24
         gateway: 192.168.100.1
         aux_addresses:
          mysql: 192.168.100.40
          apigw-tomcat: 192.168.100.41